row.names(MSTUS_norm) <- todo_treatments$Peak_ID
# LOG2 scale (plotting)
log_MSTUS_norm <- log2(MSTUS_norm)
# repeat 1 looks particularly ugly...
# BATCH EFFECT CORRECTION WITH SVA
mod1 <- model.matrix(~0 + Group, Sample_Info)
mod0 <- model.matrix(~1, Sample_Info)
svobj <- svaseq(as.matrix(MSTUS_norm), mod1, mod0)
# "Clean" gene expression data
cleanY = function(y, mod, svs) {
X = cbind(mod, svs)
Hat = solve(t(X) %*% X) %*% t(X)
beta = (Hat %*% t(y))
rm(Hat)
gc()
P = ncol(mod)
return(y - t(as.matrix(X[,-c(1:P)]) %*% beta[-c(1:P),]))
}
cleaned_count <- cleanY(log_MSTUS_norm, mod1, svobj$sv[,1:4]) # how many sv to use (the more, more transformation)
### averaged eset for plotting
final_avg <- as.data.frame(cbind(rowMeans(cleaned_count[,1:5]), rowMeans(cleaned_count[,6:10]), rowMeans(cleaned_count[,11:15]), rowMeans(cleaned_count[,16:20]), rowMeans(cleaned_count[,21:25]), rowMeans(cleaned_count[,26:30])))
colnames(final_avg) <- c( "DMSO24", "MKC24", "DMSO48", "MKC48", "DMSO72", "MKC72")
final_avg <- cbind(todo_treatments[,c(1,2,10)], final_avg)
# standard error of the mean (SEM)
std <- function(x) sd(x)/sqrt(length(x)) # SD divided by square root of sample number
final_avg$DMSO24.se <- apply(cleaned_count[,1:5], 1, function(x) std(as.numeric(x)))
final_avg$MKC24.se <- apply(cleaned_count[,6:10], 1, function(x) std(as.numeric(x)))
final_avg$DMSO48.se <- apply(cleaned_count[,11:15], 1, function(x) std(as.numeric(x)))
final_avg$MKC48.se <- apply(cleaned_count[,16:20], 1, function(x) std(as.numeric(x)))
final_avg$DMSO72.se <- apply(cleaned_count[,21:25], 1, function(x) std(as.numeric(x)))
final_avg$MKC72.se <- apply(cleaned_count[,26:30], 1, function(x) std(as.numeric(x)))
# MKC/DMSO log2 fold changes
final_avg$DvsM24h <- final_avg$MKC24 - final_avg$DMSO24
final_avg$DvsM48h <- final_avg$MKC48 - final_avg$DMSO48
final_avg$DvsM72h <- final_avg$MKC72 - final_avg$DMSO72
# add lenght and saturation columns
final_avg$lenght <- sapply(str_extract_all(final_avg$Compound_Name, "[0-9]+(?:)"), function(x) sum(as.numeric(x)))
final_avg$saturation <- sapply(str_extract_all(final_avg$Compound_Name, "(?<=:)[0-9]+"), function(x) sum(as.numeric(x)))
final_avg$lenght <- final_avg$lenght - final_avg$saturation #bad regex
# solo lipids
solo_lipids <- subset(final_avg, final_avg$Lipid_Class != "Amino Acids") #also removes NA
# HEATMAP OF FOLD CHANGES FOR ALL LIPIDS THROUGH 3 TIME POINTS
annotation_row <- as.data.frame(solo_lipids$Lipid_Class)
row.names(annotation_row) <- solo_lipids$Peak_ID
row.names(solo_lipids) <- solo_lipids$Peak_ID
newCols <- rev(primary.colors(length(unique(annotation_row$`solo_lipids$Lipid_Class`)))) #reverse just cause I didnt like colors
names(newCols) <- unique(annotation_row$`solo_lipids$Lipid_Class`)
newCols <- list(`solo_lipids$Lipid_Class` = newCols)
lenghtplot = function(lipido, color) {
ooo <- subset(final_avg, final_avg$Lipid_Class == lipido)
uuu <- summary(ooo$lenght)
ooo$saturange <- NA
ooo$saturange[ooo$lenght <= round(uuu[[2]])] <- paste( "<" , round(uuu[[2]]))
ooo$saturange[ooo$lenght > round(uuu[[2]])] <- paste(round(uuu[[2]]),"-", round(uuu[[3]]))
ooo$saturange[ooo$lenght > round(uuu[[3]])] <- paste(round(uuu[[3]]),"-", round(uuu[[5]]))
ooo$saturange[ooo$lenght >= round(uuu[[5]])] <- paste( ">" , round(uuu[[5]]))
average_tri <- ddply(ooo,21,numcolwise(mean))
average_tri$se24 <- c(sd(ooo$DvsM24[ooo$saturange == paste( "<" , round(uuu[[2]]))]), sd(ooo$DvsM24[ooo$saturange == paste(round(uuu[[2]]),"-", round(uuu[[3]]))]), sd(ooo$DvsM24[ooo$saturange == paste(round(uuu[[3]]),"-", round(uuu[[5]]))]), sd(ooo$DvsM24[ooo$saturange == paste( ">" , round(uuu[[5]]))]))
average_tri$se48 <- c(sd(ooo$DvsM24[ooo$saturange == paste( "<" , round(uuu[[2]]))]), sd(ooo$DvsM48[ooo$saturange == paste(round(uuu[[2]]),"-", round(uuu[[3]]))]), sd(ooo$DvsM48[ooo$saturange == paste(round(uuu[[3]]),"-", round(uuu[[5]]))]), sd(ooo$DvsM48[ooo$saturange == paste( ">" , round(uuu[[5]]))]))
average_tri$se72 <- c(sd(ooo$DvsM24[ooo$saturange == paste( "<" , round(uuu[[2]]))]), sd(ooo$DvsM72[ooo$saturange == paste(round(uuu[[2]]),"-", round(uuu[[3]]))]), sd(ooo$DvsM72[ooo$saturange == paste(round(uuu[[3]]),"-", round(uuu[[5]]))]), sd(ooo$DvsM72[ooo$saturange == paste( ">" , round(uuu[[5]]))]))
melt2 <- melt(average_tri, id.vars = 1, measure.vars = 14:16)
melt3 <- melt(average_tri, id.vars = 1, measure.vars = 19:21)
melt_todo <- cbind(melt2, melt3[,3])
melt_todo$variable <- gsub("DvsM24", "24h", melt_todo$variable)
melt_todo$variable <- gsub("DvsM48", "48h", melt_todo$variable)
melt_todo$variable <- gsub("DvsM72", "72h", melt_todo$variable)
melt_dots <- melt(ooo, id.vars = 21, measure.vars = 16:18)
melt_dots$variable <- gsub("DvsM24", "24h", melt_dots$variable)
melt_dots$variable <- gsub("DvsM48", "48h", melt_dots$variable)
melt_dots$variable <- gsub("DvsM72", "72h", melt_dots$variable)
numero <- round(max(melt_dots$value + 0.1), digits = 1)
numero2 <- round(min(melt_dots$value - 0.1), digits = 1)
melt_todo$saturange <- factor(melt_todo$saturange, levels = c(paste( "<" , round(uuu[[2]])), paste(round(uuu[[2]]),"-", round(uuu[[3]])), paste(round(uuu[[3]]),"-", round(uuu[[5]])), paste( ">" , round(uuu[[5]]))))
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$saturange,ymin=melt_todo$value-melt_todo$`melt3[, 3]`,ymax=melt_todo$value+melt_todo$`melt3[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$saturange,ymin=melt_todo$value-melt_todo$`melt3[, 3]`,ymax=melt_todo$value+melt_todo$`melt3[, 3]`), position="dodge",stat="identity") +
geom_point(data=melt_dots,pch=21, colour="black", aes(fill=melt_dots$variable ,group=melt_dots$variable, y=melt_dots$value,x=melt_dots$saturange), position=position_jitterdodge(jitter.width=0.1, dodge.width=0.9)) +
scale_fill_manual(values= c("white", "grey50", color)) +
labs(x = "number of carbons", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
ylim(numero2, numero)
}
lenghtplot("Phosphatidylcholine"  , "#00FF00"  )
# For TAGs
unique(final_avg$Lipid_Class)
lenghtplot("Diacylglycerol"  , "#00FF00"  )
ooo <- subset(final_avg, final_avg$Lipid_Class == "Diacylglycerol")
probando <- subset(final_avg, final_avg$Lipid_Class == "Diacylglycerol")
# TAG lenght&saturation analysis
library("stringr")
library("ggplot2")
library("plyr")
library("reshape2")
library("svglite")
library("pheatmap")
library("ggpubr")
Sample_info <- data.frame( group = c(rep("cotreatment", 3), rep("DGAT2inh", 3), rep("DMSO", 3), rep("MKC", 3)),
replicate = c("R1", "R2", "R3", "R1", "R2", "R3", "R1", "R2", "R3", "R1", "R2", "R3"))
setwd("~/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data")
View(Sample_info)
write.table(Sample_info, "Beatson_sample_info.txt", sep = " ", dec = ".", row.names = FALSE, col.names = TRUE)
sample_info <- read.csv("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_sample_info.txt")
View(sample_info)
View(Sample_info)
sample_info <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_sample_info.txt")
sample_info <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_sample_info.txt", sep = " ")
View(sample_info)
View(Sample_info)
# indicate path to .csv file with average values for each replicate
todo_treatments <- read.csv("C:/Users/alman/Desktop/MS_variado/DMSO_MKC_DGAT2inh_cotreat.csv")
# indicate path to .csv file with average values for each replicate
todo_treatments <- read.csv("C:/Users/alman/Desktop/MS_variado/DMSO_MKC_DGAT2inh_cotreat.csv")
getwd()
write.table(todo_treatments, "Beatson_MS.txt", sep = " ", dec = ".", row.names = TRUE, col.names = TRUE)
# indicate path to .csv file with average values for each replicate
todo_treatmentsSS <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_MS.txt", sep = " ")
View(todo_treatments)
View(todo_treatmentsSS)
# indicate path to .csv file with average values for each replicate
todo_treatments <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_MS.txt", sep = " ")
sample_info <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_sample_info.txt", sep = " ")
# MSTUS NORMALIZATION (normalized to sum of peak areas)
MSTUS_norm <- sweep(todo_treatments[,3:ncol(todo_treatments)] ,2,colSums(todo_treatments[,3:ncol(todo_treatments)])/100000000,`/`)
# LOG2 scale (plotting, Limma)
log_MSTUS_norm <- log2(MSTUS_norm)
### averaged eset for plotting
final_avg <- as.data.frame(cbind(rowMeans(log_MSTUS_norm[,1:3]), rowMeans(log_MSTUS_norm[,4:6]), rowMeans(log_MSTUS_norm[,7:9]), rowMeans(log_MSTUS_norm[,10:12])))
row.names(final_avg) <- row.names(log_MSTUS_norm)
colnames(final_avg) <- c("cotreatment", "DGAT2inh", "DMSO", "MKC8866")
final_avg <- cbind(todo_treatments[,1:2], final_avg)
std <- function(x) sd(x)/sqrt(length(x))
final_avg$DMSO.se <- apply(log_MSTUS_norm[,1:3], 1, function(x) std(as.numeric(x)))
final_avg$MKC.se <- apply(log_MSTUS_norm[,4:6], 1, function(x) std(as.numeric(x)))
final_avg$DGAT2inh.se <- apply(log_MSTUS_norm[,7:9], 1, function(x) std(as.numeric(x)))
final_avg$cotreat.se <- apply(log_MSTUS_norm[,10:12], 1, function(x) std(as.numeric(x)))
final_avg$DvsD2i <- final_avg$DGAT2inh - final_avg$DMSO
final_avg$Dvscotreat <- final_avg$cotreatment - final_avg$DMSO
final_avg$DvsM <- final_avg$MKC8866 - final_avg$DMSO
final_avg$DvsD2i.se <- abs(sqrt((final_avg$DGAT2inh.se/final_avg$DGAT2inh)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsD2i)
final_avg$Dvscotreat.se <- abs(sqrt((final_avg$cotreat.se/final_avg$cotreatment)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$Dvscotreat)
final_avg$DvsM.se <- abs(sqrt((final_avg$MKC.se/final_avg$MKC8866)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsM)
### 72h barplots
p <- ggplot(final_avg, aes(final_avg$C..Lipid.Class, final_avg$DvsM, fill = final_avg$C..Lipid.Class))
p + geom_boxplot(outlier.shape = NA, size =2, alpha = 0.5) +
geom_point(aes(), size = 2, position = position_jitterdodge()) +
labs(x="", y = "DGAT2inh/DMSO log2 Fold Change", element_text(face = "bold", angle = 0)) +
theme(panel.background = element_rect( colour = "grey50"), axis.text.x = element_text(angle = 45, hjust = 1, size = 12)) +
geom_hline(yintercept = 0 ,linetype = 2, size = 2, color = "red") +
ggtitle ("72 hours")
## formatting
final_avg$lenght <- sapply(str_extract_all(final_avg$C..Identification, "[0-9]{2}(?:)"), function(x) sum(as.numeric(x)))
final_avg$saturation <- sapply(str_extract_all(final_avg$C..Identification, "(?<=:)[0-9]+"), function(x) sum(as.numeric(x)))
View(final_avg)
final_avg$nombre <- paste(final_avg$C..Lipid.Class, final_avg$lenght, ":", final_avg$saturation)
annotation <- unique(final_avg[,c(1,17:19)])
# consolidate duplicated entries for same metabolites
final_avg <- ddply(final_avg,19,numcolwise(mean))
final_avg <- merge(annotation, final_avg, by.x = 4, by.y = 1)
row.names(final_avg) <- final_avg$nombre
final_avg <- final_avg[order(final_avg$lenght.x, decreasing = TRUE),]
final_avg <- final_avg[order(final_avg$saturation.x, decreasing = TRUE),]
final_avg$nombre <- factor(final_avg$nombre, levels = (unique(final_avg$nombre)))
Satuplot = function(lipido, columna) {
ooo <- subset(final_avg, final_avg$C..Lipid.Class == lipido)
numeros_magicos <- cumsum(rev(table(ooo$saturation))) + 0.5
grafico <- ggplot(ooo, aes( y=ooo[,columna], x= ooo$nombre))
grafico + geom_bar(position="dodge", stat="identity", color="black") +
geom_errorbar(aes(ymin=ooo[,columna]-ooo[,columna+3], ymax= ooo[,columna]+ooo[,columna+3]), width=.2,position=position_dodge(.9)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_vline(xintercept = numeros_magicos[-length(numeros_magicos)] ,linetype = 2, size = 1, color = "black") +
coord_flip() +
expand_limits( y=c(-1, 1)) +
labs(x = "", y = "log2 ratios", element_text(face = "bold", angle = 0)) +
theme_classic()
}
Satuplot("TG", 9)
### export in same pixel size
### grouped barplots
melt2 <- melt(final_avg[,c(1,13:15)])
melt2 <- merge(annotation, melt2, by.x = 4, by.y = 1)
melt2 <- melt2[order(melt2$lenght, decreasing = TRUE),]
melt2 <- melt2[order(melt2$saturation, decreasing = TRUE),]
melt2 <- melt2[order(melt2$saturation, decreasing = TRUE),]
melt2$nombre <- factor(melt2$nombre, levels = (unique(melt2$nombre)))
melt2$variable <- gsub("DvsM", "c.MKC8866", melt2$variable)
melt2$variable <- gsub("DvsD2i", "b.PF-06427878", melt2$variable)
melt2$variable <- gsub("Dvscotreat", "a.Cotreatment", melt2$variable)
Satuplot_grouped = function(lipido) {
ooo <- subset(final_avg, final_avg$C..Lipid.Class == lipido)
numeros_magicos <- cumsum(rev(table(ooo$saturation.x))) + 0.5
uuu <- subset(melt2, melt2$C..Lipid.Class == lipido)
grafico <- ggplot(uuu, aes( y=uuu$value, x= uuu$nombre, fill = uuu$variable))
grafico + geom_bar(position="dodge", stat="identity", color="black") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_vline(xintercept = numeros_magicos[-length(numeros_magicos)] ,linetype = 2, size = 1, color = "black") +
coord_flip() +
expand_limits( y=c(-round(max(uuu$value) + 0.25, digits = 2), round(max(uuu$value) + 0.25, digits = 2))) +
labs(x = "", y = "log2 ratios (vs control)", element_text(face = "bold", angle = 0)) +
theme_classic()
ggsave( paste( "Arnauds", lipido, ".jpeg"), plot=last_plot(), width=5, height= nrow(ooo)/5)
}
Satuplot_grouped("TG")
View(MSTUS_norm)
View(log_MSTUS_norm)
View(todo_treatments)
row.names(MSTUS_norm) <- todo_treatments$C..Identification
### PCA
pca <- prcomp(t(na.omit(log_MSTUS_norm)), center = T, scale. = T)
summary(pca)
eigs <- pca$sdev^2
PCAi <- as.data.frame(pca$x)
ggplot(PCAi , aes(PC1, PC2, col= Sample_Info$Group)) + geom_point(aes(size=3)) + geom_text(aes(label = row.names(PCAi)), nudge_y = 1) +
labs (y = paste("PC2", round(eigs[2] / sum(eigs), digits = 2)), x = paste("PC1", round(eigs[1] / sum(eigs), digits = 2))) + # substitute with % variances
ggtitle("PCA. by treatment") +
theme_bw()
PCAi <- as.data.frame(pca$x)
ggplot(PCAi , aes(PC1, PC2, col= sample_info$group)) + geom_point(aes(size=3)) + geom_text(aes(label = row.names(PCAi)), nudge_y = 1) +
labs (y = paste("PC2", round(eigs[2] / sum(eigs), digits = 2)), x = paste("PC1", round(eigs[1] / sum(eigs), digits = 2))) + # substitute with % variances
ggtitle("PCA. by treatment") +
theme_bw()
#PCA by repeat
ggplot(PCAi , aes(PC1, PC2, col= as.character(sample_info$replicate))) + geom_point(aes(size=3)) + geom_text(aes(label = row.names(PCAi)), nudge_y = 1) +
labs (y = paste("PC2", round(eigs[2] / sum(eigs), digits = 2)), x = paste("PC1", round(eigs[1] / sum(eigs), digits = 2))) + # substitute with % variances
ggtitle("PCA. by treatment") +
theme_bw()
final_avg$DMSO.se <- apply(log_MSTUS_norm[,1:3], 1, function(x) std(as.numeric(x)))
### averaged eset for plotting
final_avg <- as.data.frame(cbind(rowMeans(log_MSTUS_norm[,1:3]), rowMeans(log_MSTUS_norm[,4:6]), rowMeans(log_MSTUS_norm[,7:9]), rowMeans(log_MSTUS_norm[,10:12])))
row.names(final_avg) <- row.names(log_MSTUS_norm)
colnames(final_avg) <- c("cotreatment", "DGAT2inh", "DMSO", "MKC8866")
final_avg <- cbind(todo_treatments[,1:2], final_avg)
std <- function(x) sd(x)/sqrt(length(x))
final_avg$DMSO.se <- apply(log_MSTUS_norm[,1:3], 1, function(x) std(as.numeric(x)))
final_avg$MKC.se <- apply(log_MSTUS_norm[,4:6], 1, function(x) std(as.numeric(x)))
final_avg$DGAT2inh.se <- apply(log_MSTUS_norm[,7:9], 1, function(x) std(as.numeric(x)))
final_avg$cotreat.se <- apply(log_MSTUS_norm[,10:12], 1, function(x) std(as.numeric(x)))
final_avg$DvsD2i <- final_avg$DGAT2inh - final_avg$DMSO
final_avg$Dvscotreat <- final_avg$cotreatment - final_avg$DMSO
final_avg$DvsM <- final_avg$MKC8866 - final_avg$DMSO
final_avg$DvsD2i.se <- abs(sqrt((final_avg$DGAT2inh.se/final_avg$DGAT2inh)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsD2i)
final_avg$Dvscotreat.se <- abs(sqrt((final_avg$cotreat.se/final_avg$cotreatment)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$Dvscotreat)
final_avg$DvsM.se <- abs(sqrt((final_avg$MKC.se/final_avg$MKC8866)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsM)
## formatting, lenght & saturation
final_avg$lenght <- sapply(str_extract_all(final_avg$C..Identification, "[0-9]{2}(?:)"), function(x) sum(as.numeric(x)))
final_avg$saturation <- sapply(str_extract_all(final_avg$C..Identification, "(?<=:)[0-9]+"), function(x) sum(as.numeric(x)))
final_avg$nombre <- paste(final_avg$C..Lipid.Class, final_avg$lenght, ":", final_avg$saturation)
annotation <- unique(final_avg[,c(1,17:19)])
View(annotation)
View(final_avg)
# consolidate duplicated entries for same metabolites
final_avg <- ddply(final_avg,19,numcolwise(mean))
final_avg <- merge(annotation, final_avg, by.x = 4, by.y = 1)
row.names(final_avg) <- final_avg$nombre
View(final_avg)
View(final_avg)
### TAKE CLOSER LOOK AT TAGS
### HEATMAP
TAGs <- subset(final_avg, final_avg$C..Lipid.Class == "TG")
View(TAGs)
colnames(TAGs)
View(annotation)
# indicate path to .csv file with average values for each replicate
todo_treatments <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_MS.txt", sep = " ")
sample_info <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_sample_info.txt", sep = " ")
# MSTUS NORMALIZATION (normalized to sum of peak areas)
MSTUS_norm <- sweep(todo_treatments[,3:ncol(todo_treatments)] ,2,colSums(todo_treatments[,3:ncol(todo_treatments)])/100000000,`/`)
# LOG2 scale (plotting, Limma)
log_MSTUS_norm <- log2(MSTUS_norm)
### PCA
pca <- prcomp(t(na.omit(log_MSTUS_norm)), center = T, scale. = T)
### averaged eset for plotting
final_avg <- as.data.frame(cbind(rowMeans(log_MSTUS_norm[,1:3]), rowMeans(log_MSTUS_norm[,4:6]), rowMeans(log_MSTUS_norm[,7:9]), rowMeans(log_MSTUS_norm[,10:12])))
row.names(final_avg) <- row.names(log_MSTUS_norm)
colnames(final_avg) <- c("cotreatment", "DGAT2inh", "DMSO", "MKC8866")
final_avg <- cbind(todo_treatments[,1:2], final_avg)
std <- function(x) sd(x)/sqrt(length(x))
# calculate FoldChanges, standard error of mean, error of the ratios
final_avg$DMSO.se <- apply(log_MSTUS_norm[,1:3], 1, function(x) std(as.numeric(x)))
final_avg$MKC.se <- apply(log_MSTUS_norm[,4:6], 1, function(x) std(as.numeric(x)))
final_avg$DGAT2inh.se <- apply(log_MSTUS_norm[,7:9], 1, function(x) std(as.numeric(x)))
final_avg$cotreat.se <- apply(log_MSTUS_norm[,10:12], 1, function(x) std(as.numeric(x)))
final_avg$DvsD2i <- final_avg$DGAT2inh - final_avg$DMSO
final_avg$Dvscotreat <- final_avg$cotreatment - final_avg$DMSO
final_avg$DvsM <- final_avg$MKC8866 - final_avg$DMSO
final_avg$DvsD2i.se <- abs(sqrt((final_avg$DGAT2inh.se/final_avg$DGAT2inh)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsD2i)
final_avg$Dvscotreat.se <- abs(sqrt((final_avg$cotreat.se/final_avg$cotreatment)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$Dvscotreat)
final_avg$DvsM.se <- abs(sqrt((final_avg$MKC.se/final_avg$MKC8866)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsM)
View(final_avg)
## formatting, lenght & saturation
final_avg$lenght <- sapply(str_extract_all(final_avg$C..Identification, "[0-9]{2}(?:)"), function(x) sum(as.numeric(x)))
final_avg$saturation <- sapply(str_extract_all(final_avg$C..Identification, "(?<=:)[0-9]+"), function(x) sum(as.numeric(x)))
final_avg$nombre <- paste(final_avg$C..Lipid.Class, final_avg$lenght, ":", final_avg$saturation)
annotation <- unique(final_avg[,c(1,19)])
View(annotation)
# consolidate duplicated entries for same metabolites
final_avg <- ddply(final_avg,19,numcolwise(mean))
final_avg <- merge(annotation, final_avg, by.x = 4, by.y = 1)
final_avg <- merge(annotation, final_avg, by.x = 2, by.y = 1)
row.names(final_avg) <- final_avg$nombre
### TAKE CLOSER LOOK AT TAGS
### HEATMAP
TAGs <- subset(final_avg, final_avg$C..Lipid.Class == "TG")
View(TAGs)
TAGs <- TAGs[order(TAGs$lenght),]
TAGs <- TAGs[order(TAGs$saturation),]
my_palette <- colorRampPalette(c("navy","white","red"))(n = 20) # or whatever colors and number
pheatmap(na.omit(TAGs[,c(7,8,6,5)]),
cluster_cols=FALSE,
color = my_palette,
border_color = NA,
fontsize_col = 14,
show_rownames = TRUE)
colnames(TAGs)
pheatmap(na.omit(TAGs[,c(5,6,4,3)]),
cluster_cols=FALSE,
color = my_palette,
border_color = NA,
fontsize_col = 14,
show_rownames = TRUE)
pheatmap(na.omit(TAGs[,c(5,6,4,3)]),
cluster_cols=FALSE,
color = my_palette,
border_color = NA,
fontsize_col = 14,
scale = "row",
show_rownames = TRUE)
pheatmap(na.omit(TAGs[,c(5,6,4,3)]),
cluster_cols=FALSE,
cluster_rows = FALSE,
color = my_palette,
border_color = NA,
fontsize_col = 14,
scale = "row",
show_rownames = TRUE)
getwd()
ggsave( "Beatson_TAG_heat.jpeg", plot=last_plot(), width=5, height= 10)
ggsave( "Beatson_TAG_heat.pdf", plot=last_plot(), width=5, height= 10)
pheatmap(na.omit(TAGs[,c(5,6,4,3)]),
cluster_cols=FALSE,
cluster_rows = FALSE,
color = my_palette,
border_color = NA,
fontsize_col = 14,
scale = "row",
show_rownames = TRUE)
ggsave( "Beatson_TAG_heat.pdf", plot=last_plot(), width=5, height= 10)
### Plot changes for all TAG species
numeros_magicos <- cumsum(rev(table(TAGs$saturation))) + 0.5
colnames(TAGs)
melt_uno <- melt(TAGs, id.vars = 1, measure.vars = 3:6)
View(melt_uno)
melt_uno <- melt(TAGs, id.vars = 1, measure.vars = 11:13)
melt_dos <- melt(TAGs, id.vars = 1, measure.vars = 14:16)
View(melt_dos)
View(melt_uno)
melt_todo <- cbind(melt_uno, melt_dos[,3])
View(melt_todo)
colnames(melt_todo)
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
scale_fill_manual(values= c("white", "grey50", color)) +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip()
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip()
melt_todo$nombre <- factor(melt_todo$nombre, levels = (unique(melt_todo$nombre)))
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip()
melt_todo$nombre <- factor(melt_todo$nombre, levels = rev(unique(melt_todo$nombre)))
colnames(melt_todo)
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip()
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip() +
geom_vline(xintercept = numeros_magicos[-length(numeros_magicos)] ,linetype = 2, size = 1, color = "black") +
grafico <- ggplot(ooo, aes( y=ooo[,columna], x= ooo$nombre))
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip() +
geom_vline(xintercept = numeros_magicos[-length(numeros_magicos)] ,linetype = 2, size = 1, color = "black")
melt_todo$variable <- gsub("DvsM", "MKC8866", melt_todo$variable)
melt_todo$variable <- gsub("DvsD2i", "PF-06427878", melt_todo$variable)
melt_todo$variable <- gsub("Dvscotreat", "Cotreatment", melt_todo$variable)
melt_todo$variable <- factor(melt_todo$variable, levels = c("MKC8866", "PF-06427878", "Cotreatment"))
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip() +
geom_vline(xintercept = numeros_magicos[-length(numeros_magicos)] ,linetype = 2, size = 1, color = "black")
melt_todo$variable <- factor(melt_todo$variable, levels = c("Cotreatment","PF-06427878","MKC8866"))
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip() +
geom_vline(xintercept = numeros_magicos[-length(numeros_magicos)] ,linetype = 2, size = 1, color = "black")
# indicate path to .csv file with average values for each replicate
todo_treatments <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_MS.txt", sep = " ")
sample_info <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_sample_info.txt", sep = " ")
# MSTUS NORMALIZATION (normalized to sum of peak areas)
MSTUS_norm <- sweep(todo_treatments[,3:ncol(todo_treatments)] ,2,colSums(todo_treatments[,3:ncol(todo_treatments)])/100000000,`/`)
# LOG2 scale (plotting, Limma)
log_MSTUS_norm <- log2(MSTUS_norm)
### averaged eset for plotting
final_avg <- as.data.frame(cbind(rowMeans(log_MSTUS_norm[,1:3]), rowMeans(log_MSTUS_norm[,4:6]), rowMeans(log_MSTUS_norm[,7:9]), rowMeans(log_MSTUS_norm[,10:12])))
row.names(final_avg) <- row.names(log_MSTUS_norm)
colnames(final_avg) <- c("cotreatment", "DGAT2inh", "DMSO", "MKC8866")
final_avg <- cbind(todo_treatments[,1:2], final_avg)
# calculate FoldChanges, standard error of mean, error of the ratios
final_avg$DMSO.sd <- apply(log_MSTUS_norm[,1:3], 1, function(x) sd(as.numeric(x)))
final_avg$MKC.sd <- apply(log_MSTUS_norm[,4:6], 1, function(x) sd(as.numeric(x)))
final_avg$DGAT2inh.sd <- apply(log_MSTUS_norm[,7:9], 1, function(x) sd(as.numeric(x)))
final_avg$cotreat.sd <- apply(log_MSTUS_norm[,10:12], 1, function(x) sd(as.numeric(x)))
final_avg$DvsD2i <- final_avg$DGAT2inh - final_avg$DMSO
final_avg$Dvscotreat <- final_avg$cotreatment - final_avg$DMSO
final_avg$DvsM <- final_avg$MKC8866 - final_avg$DMSO
final_avg$DvsD2i.se <- abs(sqrt((final_avg$DGAT2inh.se/final_avg$DGAT2inh)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsD2i)
final_avg$Dvscotreat.se <- abs(sqrt((final_avg$cotreat.se/final_avg$cotreatment)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$Dvscotreat)
final_avg$DvsM.se <- abs(sqrt((final_avg$MKC.se/final_avg$MKC8866)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsM)
## formatting, lenght & saturation
final_avg$lenght <- sapply(str_extract_all(final_avg$C..Identification, "[0-9]{2}(?:)"), function(x) sum(as.numeric(x)))
final_avg$saturation <- sapply(str_extract_all(final_avg$C..Identification, "(?<=:)[0-9]+"), function(x) sum(as.numeric(x)))
final_avg$nombre <- paste(final_avg$C..Lipid.Class, final_avg$lenght, ":", final_avg$saturation)
annotation <- unique(final_avg[,c(1,19)])
# indicate path to .csv file with average values for each replicate
todo_treatments <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_MS.txt", sep = " ")
sample_info <- read.delim("C:/Users/alman/Documents/GitHub/Regulated-IRE1-dependent-decay-RIDD-mediated-reprograming-of-lipid-metabolism-in-cancer/Data/Beatson_sample_info.txt", sep = " ")
# MSTUS NORMALIZATION (normalized to sum of peak areas)
MSTUS_norm <- sweep(todo_treatments[,3:ncol(todo_treatments)] ,2,colSums(todo_treatments[,3:ncol(todo_treatments)])/100000000,`/`)
# LOG2 scale (plotting, Limma)
log_MSTUS_norm <- log2(MSTUS_norm)
### PCA
pca <- prcomp(t(na.omit(log_MSTUS_norm)), center = T, scale. = T)
summary(pca)
eigs <- pca$sdev^2
### averaged eset for plotting
final_avg <- as.data.frame(cbind(rowMeans(log_MSTUS_norm[,1:3]), rowMeans(log_MSTUS_norm[,4:6]), rowMeans(log_MSTUS_norm[,7:9]), rowMeans(log_MSTUS_norm[,10:12])))
row.names(final_avg) <- row.names(log_MSTUS_norm)
colnames(final_avg) <- c("cotreatment", "DGAT2inh", "DMSO", "MKC8866")
final_avg <- cbind(todo_treatments[,1:2], final_avg)
# calculate FoldChanges, standard error of mean, error of the ratios
final_avg$DMSO.sd <- apply(log_MSTUS_norm[,1:3], 1, function(x) sd(as.numeric(x)))
final_avg$MKC.sd <- apply(log_MSTUS_norm[,4:6], 1, function(x) sd(as.numeric(x)))
final_avg$DGAT2inh.sd <- apply(log_MSTUS_norm[,7:9], 1, function(x) sd(as.numeric(x)))
final_avg$cotreat.sd <- apply(log_MSTUS_norm[,10:12], 1, function(x) sd(as.numeric(x)))
final_avg$DvsD2i <- final_avg$DGAT2inh - final_avg$DMSO
final_avg$Dvscotreat <- final_avg$cotreatment - final_avg$DMSO
final_avg$DvsM <- final_avg$MKC8866 - final_avg$DMSO
final_avg$DvsD2i.se <- abs(sqrt((final_avg$DGAT2inh.se/final_avg$DGAT2inh)^2 + (final_avg$DMSO.se/final_avg$DMSO)^2)*final_avg$DvsD2i)
final_avg$DvsD2i.se <- abs(sqrt((final_avg$DGAT2inh.sd/final_avg$DGAT2inh)^2 + (final_avg$DMSO.sd/final_avg$DMSO)^2)*final_avg$DvsD2i)
final_avg$Dvscotreat.se <- abs(sqrt((final_avg$cotreat.sd/final_avg$cotreatment)^2 + (final_avg$DMSO.sd/final_avg$DMSO)^2)*final_avg$Dvscotreat)
final_avg$DvsM.se <- abs(sqrt((final_avg$MKC.sd/final_avg$MKC8866)^2 + (final_avg$DMSO.sd/final_avg$DMSO)^2)*final_avg$DvsM)
## formatting, lenght & saturation
final_avg$lenght <- sapply(str_extract_all(final_avg$C..Identification, "[0-9]{2}(?:)"), function(x) sum(as.numeric(x)))
final_avg$saturation <- sapply(str_extract_all(final_avg$C..Identification, "(?<=:)[0-9]+"), function(x) sum(as.numeric(x)))
final_avg$nombre <- paste(final_avg$C..Lipid.Class, final_avg$lenght, ":", final_avg$saturation)
annotation <- unique(final_avg[,c(1,19)])
# consolidate duplicated entries for same metabolites
final_avg <- ddply(final_avg,19,numcolwise(mean))
final_avg <- merge(annotation, final_avg, by.x = 2, by.y = 1)
row.names(final_avg) <- final_avg$nombre
### TAKE CLOSER LOOK AT TAGS
### HEATMAP
TAGs <- subset(final_avg, final_avg$C..Lipid.Class == "TG")
TAGs <- TAGs[order(TAGs$lenght),]
TAGs <- TAGs[order(TAGs$saturation),]
my_palette <- colorRampPalette(c("navy","white","red"))(n = 20) # or whatever colors and number
pheatmap(na.omit(TAGs[,c(5,6,4,3)]),
cluster_cols=FALSE,
cluster_rows = FALSE,
color = my_palette,
border_color = NA,
fontsize_col = 14,
scale = "row",
show_rownames = TRUE)
### Plot changes for all TAG species
numeros_magicos <- cumsum(rev(table(TAGs$saturation))) + 0.5
melt_uno <- melt(TAGs, id.vars = 1, measure.vars = 11:13)
melt_dos <- melt(TAGs, id.vars = 1, measure.vars = 14:16)
melt_todo <- cbind(melt_uno, melt_dos[,3])
melt_todo$nombre <- factor(melt_todo$nombre, levels = rev(unique(melt_todo$nombre)))
melt_todo$variable <- gsub("DvsM", "MKC8866", melt_todo$variable)
melt_todo$variable <- gsub("DvsD2i", "PF-06427878", melt_todo$variable)
melt_todo$variable <- gsub("Dvscotreat", "Cotreatment", melt_todo$variable)
melt_todo$variable <- factor(melt_todo$variable, levels = c("Cotreatment","PF-06427878","MKC8866"))
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "number of double bonds", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip() +
geom_vline(xintercept = numeros_magicos[-length(numeros_magicos)] ,linetype = 2, size = 1, color = "black")
ggplot() +
geom_bar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre, ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge", stat="identity", color="black") +
geom_errorbar(data=melt_todo, aes(fill=melt_todo$variable, y=melt_todo$value,x=melt_todo$nombre,ymin=melt_todo$value-melt_todo$`melt_dos[, 3]`,ymax=melt_todo$value+melt_todo$`melt_dos[, 3]`), position="dodge",stat="identity") +
labs(x = "", y = "log2 FC (MKC8866 vs control)", element_text(face = "bold", angle = 0)) +
coord_flip() +
geom_vline(xintercept = numeros_magicos[-length(numeros_magicos)] ,linetype = 2, size = 1, color = "black")
